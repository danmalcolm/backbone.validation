1. DONE Combine OR
rules.any(rules.email(), rules.length({ min: 6, max: 10 }), { message: "Username of 6 to 10 chars or email address" }); - either combine messages or allow message to be defined

2. DONE Combine AND
Allows multiple rules to be treated as a single error
rules.combine(rules.numeric(), rules.length({ len: 6 }), { message: "Number 6 digits" })

3. DONE Add exact property to length options for exact length

4. DONE Special use of self property to define rules on instance:

var Model = Backbone.Model.extend({
	rules: {
		// can modify if you have attr called "self", e.g. Backbone.validation.selfReferenceRulesProperty = "_self_"
		self: rules.check(function() {

		}),
		name: rules.notNull(),
	}

});

5. DONE define rules that apply to multiple attributes, so that we evaluate what we need to test when a 
different attr changes, e.g. start attribute < end attribute
- If at least one of the attrs is being set and all attrs are either being validated or are present on model (and valid), 
then we evaluate rules
- If not all attrs are present on model or they themselves are not valid, do not evaluate rule - additional 
rules should be defined for each attr to ensure they are valid

var Model = Backbone.Model.extend({
	rules: {		
		start: rules.numeric(),
		end: rules.numeric(),
		"start,end": rules.test(function(start,end) {
			return start < end;
		}, { message: "Cannot end before start")
	}
});

oh yes....

6. Dates

birthday: rules.date("ddMMyyyy|dd MMM yyyy")

7. Numbers

rules.number(type:"integer" (decimal), min: 3, max: 4)

8. Global configuration of common options, like trim

9. Specify alternative path formatters, e.g. ROR form helper style paths, e.g. user[name]

10. Alternative config

11. More detailed demos:

- inline interactive message display
- nested collections, e.g. order form

12. Improve message generation

13. Consider replacing method chaining rules config:

Alternative 1:

var MyModel = BaseModel.extend({
	rules: {
		code: "required integer", // string with delimited list of simple rules
		ean: { required: {}, length: { exact: 13, message: "giz an EAN" } } // key: rule, value: options
	}
});

14. All the no-conflict, global object shenanigans

